/*
<문제설명>

번호	: 1712번

이름	: 손익분기점

문제설명:
원드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세,
보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총
B만원의 가변 비용이 든다고 한다.

예를 들어 A = 1,000, B = 70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며,
열 대 생산하는 데는 총 1,700만원이 든다.

노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입
( 판매비용 )이 총 비용( = 고정비용 + 가변비용 )보다 많아지게 도니다. 최초로 총 수입이 총 비용보다 
많아져 이익이 발생하는 지점을 손익분기점( BREAK-EVEN POINT )이라고 한다.

A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.

입력	:
첫째 줄에 A, B, C가 빈 칸을 사이에 두고 선서대로 주어진다. A, B, C는 21억 이하의 자연수이다.

출력	:
첫째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1
을 출력한다.

*/

/*
<문제풀이전략>
각 분수의 분자가 대각선 상에서 증가하는 방향을 표시했습니다.
그림과 같은 방향으로 i 번째 대각선에서는 i까지 분자가 증가합니다.
분자는 홀수 번째 대각선에서 아래로 증가, 짝수 번째 대각선에서 위로 증가하고 있습니다.
분모는 분자의 반대 방향으로 이루어져 있어서,
분자를 구한 후, i + 1 에서 분자를 뺀 값을 분모로 사용할 수 있습니다.

i 번째 대각선에는 i개의 원소가 있으므로,
N이 몇 번째 대각선에 있는지 파악하기 위해
i를 순차적으로 증가시키며 빼줍니다.
N이 i보다 작아진 경우 해당 i번째 대각선에 N 번째 원소가 존재합니다.

이후 대각선의 홀 / 짝에 따라 방향을 고려하여 분자, 분모에 해당하는 최종 값을 결정합니다.

*/
#include <iostream>
using namespace std;

int main()
{
	int input;
	cin >> input;

	int i = 1;
	while (input > i)
	{
		input -= i;
		i++;
	}
	
	if (i % 2 == 1)
	{
		cout << i + 1 - input << '/' << input << endl;
	}
	else
	{
		cout << input << '/' << i + 1 - input << endl;
	}
}